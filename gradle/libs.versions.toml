[versions]
androidx-lifecycle = "2.8.3"
compose-multiplatform = "1.7.0"
kotlin = "2.0.21"
kotlinx-datetime = "0.6.1"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.0"
kotlininject = "0.7.1"
ksp = "2.0.21-1.0.28"
okhttp = "4.12.0"
ktor = "3.0.0"
hikari = "6.2.1"
mssql = "12.8.1.jre11"
exposed = "0.56.0"
kermit = "2.0.5"
multiplatformsettings = "1.1.1"

[plugins]
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
buildConfig = "com.github.gmazzo.buildconfig:5.4.0"

[libraries]
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlininject" }
kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlininject" }

kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

okhttp-loggingInterceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

hikari = { group = "com.zaxxer", name="HikariCP", version.ref = "hikari" }
mssql-jdbc = { group = "com.microsoft.sqlserver", name="mssql-jdbc", version.ref = "mssql" }

# Exposed DB ORM framework
exposed-core = { group = "org.jetbrains.exposed", name="exposed-core", version.ref = "exposed" }
exposed-dao = { group = "org.jetbrains.exposed", name="exposed-dao", version.ref = "exposed" }
exposed-jdbc = { group = "org.jetbrains.exposed", name="exposed-jdbc", version.ref = "exposed" }
exposed-json = { group = "org.jetbrains.exposed", name="exposed-json", version.ref = "exposed" }
exposed-kotlin-datetime = { group = "org.jetbrains.exposed", name="exposed-kotlin-datetime", version.ref = "exposed" }

# Multiplatform logging
kermit = { group = "co.touchlab", name="kermit", version.ref = "kermit" }
kermit-io = { group = "co.touchlab", name = "kermit-io", version.ref = "kermit" }

multiplatformsettings-core = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformsettings" }
multiplatformsettings-coroutines = { module = "com.russhwolf:multiplatform-settings-coroutines", version.ref = "multiplatformsettings" }